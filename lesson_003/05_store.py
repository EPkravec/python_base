# -*- coding: utf-8 -*-


goods = {
    'Лампа': '12345',
    'Стол': '23456',
    'Диван': '34567',
    'Стул': '45678',
}

store = {
    '12345': [
        {'quantity': 27, 'price': 42},
    ],
    '23456': [
        {'quantity': 22, 'price': 510},
        {'quantity': 32, 'price': 520},
    ],
    '34567': [
        {'quantity': 2, 'price': 1200},
        {'quantity': 1, 'price': 1150},
    ],
    '45678': [
        {'quantity': 50, 'price': 100},
        {'quantity': 12, 'price': 95},
        {'quantity': 43, 'price': 97},
    ],
}

for cargo, code in goods.items():
    quantity = 0  # todo почему 0 ?
    price = 0  # todo почему 0 ?
    # todo, а что так можно было? есдинственное не понятно механика работы
    # мы взяли переменную st и сказали ей проверить словарь по коду из цикла выше? но как в цикле
    # просто все не просумировалось? ведь дополнительтных условить не предоставлялось типа
    # ведь в словаре сторе помомимо  store[code]  есть еще два значения товар и цена как программа поняла что
    # что их не торагать ?
    for st in store[code]:
        # todo почему в вычислениях ниже мы не указываем например (могу неправильнонаписать)
        # st[code]['quantity']? и с прайсом тоже самое, подскажите так я считаю что тема важна а я не понял, где можно
        # и на что обратить внимание в лекциях или других источниках
        quantity += st['quantity']
        price += st['quantity'] * st['price']

    print(cargo, '-', quantity, 'шт, стоимость', price, "руб")
